{"version":3,"file":"trustgrade.min.js","sources":["../src/trustgrade.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n\nvar define = window.define // Declare define variable\nvar M = window.M // Declare M variable\nvar tinyMCE = window.tinyMCE // Declare tinyMCE variable\n\ndefine([\"jquery\", \"core/ajax\", \"core/notification\", \"core/str\", \"core/modal_factory\"], (\n  $,\n  Ajax,\n  Notification,\n  Str,\n  ModalFactory,\n) => {\n  var trustgrade = {\n    init: function () {\n      this.bindEvents()\n      this.loadQuestionBank() // Load existing questions on page load\n    },\n\n    bindEvents: () => {\n      $(document).on(\"click\", \"#check-instructions-btn\", (e) => {\n        e.preventDefault()\n        trustgrade.checkInstructions()\n      })\n      $(document).on(\"click\", \"#generate-questions-btn\", (e) => {\n        e.preventDefault()\n        trustgrade.generateQuestions()\n      })\n      $(document).on(\"change\", \"#id_trustgrade_questions_to_generate\", (e) => {\n        e.preventDefault()\n        trustgrade.updateSingleQuizSetting(\"questions_to_generate\", $(e.target).val())\n      })\n    },\n\n    showErrorModal: (title, message) => {\n      ModalFactory.create({\n        type: ModalFactory.types.ALERT,\n        title: title,\n        body: message,\n      }).then((modal) => modal.show())\n    },\n\n    showSuccessNotification: (message) => {\n      Notification.addNotification({ message: message, type: \"success\" })\n    },\n\n    updateSingleQuizSetting: function (settingName, settingValue) {\n      var cmid = this.getCourseModuleId()\n      if (cmid <= 0) return\n\n      var promises = Ajax.call([\n        {\n          methodname: \"local_trustgrade_update_quiz_setting\",\n          args: {\n            cmid: cmid,\n            setting_name: settingName,\n            setting_value: settingValue,\n          },\n        },\n      ])\n\n      promises[0]\n        .done((response) => {\n          if (response.success) {\n            Str.get_string(\"setting_updated_success\", \"local_trustgrade\", {\n              setting: settingName.replace(/_/g, \" \"),\n            }).then((message) => {\n              trustgrade.showSuccessNotification(message)\n            })\n          } else {\n            Str.get_string(\"setting_update_error\", \"local_trustgrade\").then((title) => {\n              trustgrade.showErrorModal(title, response.error || \"An error occurred while updating the setting.\")\n            })\n          }\n        })\n        .fail(Notification.exception)\n    },\n\n    checkInstructions: function () {\n      var instructions = this.getInstructions()\n      if (!instructions || instructions.trim().length === 0) {\n        Str.get_string(\"no_instructions_error\", \"local_trustgrade\").then((message) => {\n          Str.get_string(\"input_validation_error\", \"local_trustgrade\").then((title) => {\n            trustgrade.showErrorModal(title, message)\n          })\n        })\n        return\n      }\n\n      $(\"#check-instructions-btn\").prop(\"disabled\", true)\n      $(\"#ai-loading\").show()\n      $(\"#ai-recommendation-container\").hide()\n\n      var cmid = this.getCourseModuleId()\n\n      var promises = Ajax.call([\n        {\n          methodname: \"local_trustgrade_check_instructions\",\n          args: { cmid: cmid, instructions: instructions },\n        },\n      ])\n\n      promises[0]\n        .done((response) => {\n          if (response.success) {\n            var recommendationHtml = response.recommendation.replace(/\\n/g, \"<br>\")\n            if (response.from_cache) {\n              Str.get_string(\"cache_hit\", \"local_trustgrade\").then((cacheMessage) => {\n                recommendationHtml =\n                  '<div class=\"alert alert-info mb-2\"><i class=\"fa fa-clock-o\"></i> <small>' +\n                  cacheMessage +\n                  \" (Debug mode)</small></div>\" +\n                  recommendationHtml\n                $(\"#ai-recommendation\").html(recommendationHtml)\n              })\n            } else {\n              $(\"#ai-recommendation\").html(recommendationHtml)\n            }\n            $(\"#ai-recommendation-container\").show()\n          } else {\n            Str.get_string(\"gateway_error\", \"local_trustgrade\").then((title) => {\n              trustgrade.showErrorModal(title, response.error || \"An error occurred.\")\n            })\n          }\n        })\n        .fail(Notification.exception)\n        .always(() => {\n          $(\"#check-instructions-btn\").prop(\"disabled\", false)\n          $(\"#ai-loading\").hide()\n        })\n    },\n\n    generateQuestions: function () {\n      var instructions = this.getInstructions()\n      if (!instructions || instructions.trim().length === 0) {\n        Str.get_string(\"no_instructions_questions_error\", \"local_trustgrade\").then((message) => {\n          Str.get_string(\"input_validation_error\", \"local_trustgrade\").then((title) => {\n            trustgrade.showErrorModal(title, message)\n          })\n        })\n        return\n      }\n\n      $(\"#generate-questions-btn\").prop(\"disabled\", true)\n      $(\"#ai-question-loading\").show()\n      $(\"#ai-questions-container\").hide()\n\n      var cmid = this.getCourseModuleId()\n\n      var promises = Ajax.call([\n        {\n          methodname: \"local_trustgrade_generate_questions\",\n          args: { cmid: cmid, instructions: instructions },\n        },\n      ])\n\n      promises[0]\n        .done((response) => {\n          if (response.success) {\n            var questions = JSON.parse(response.questions)\n            trustgrade.formatQuestionsDisplay(questions).then((questionsHtml) => {\n              if (response.from_cache) {\n                Str.get_string(\"cache_hit\", \"local_trustgrade\").then((cacheMessage) => {\n                  questionsHtml =\n                    '<div class=\"alert alert-info mb-2\"><i class=\"fa fa-clock-o\"></i> <small>' +\n                    cacheMessage +\n                    \" (Debug mode)</small></div>\" +\n                    questionsHtml\n                  $(\"#ai-questions\").html(questionsHtml)\n                })\n              } else {\n                $(\"#ai-questions\").html(questionsHtml)\n              }\n              $(\"#ai-questions-container\").show()\n            })\n\n            if (response.message) {\n              trustgrade.showSuccessNotification(response.message)\n            }\n            trustgrade.loadQuestionBank()\n          } else {\n            Str.get_string(\"gateway_error\", \"local_trustgrade\").then((title) => {\n              trustgrade.showErrorModal(title, response.error || \"An error occurred.\")\n            })\n          }\n        })\n        .fail(Notification.exception)\n        .always(() => {\n          $(\"#generate-questions-btn\").prop(\"disabled\", false)\n          $(\"#ai-question-loading\").hide()\n        })\n    },\n\n    formatQuestionsDisplay: (questions) =>\n      new Promise((resolve) => {\n        Promise.all([\n          Str.get_string(\"generated_questions\", \"local_trustgrade\"),\n          Str.get_string(\"question\", \"local_trustgrade\"),\n          Str.get_string(\"points\", \"local_trustgrade\"),\n          Str.get_string(\"correct\", \"local_trustgrade\"),\n          Str.get_string(\"explanation\", \"local_trustgrade\"),\n        ]).then((strings) => {\n          var html = \"<h4>\" + strings[0] + \":</h4>\"\n          questions.forEach((question, index) => {\n            html += `<div class=\"question-item\" style=\"margin-bottom: 20px; padding: 15px; border: 1px solid #ddd; border-radius: 5px;\">`\n            html += `<h5>${strings[1]} ${index + 1} (${question.difficulty || \"medium\"} - ${\n              question.points || 10\n            } ${strings[2]})</h5>`\n            html += `<p><strong>Type:</strong> ${question.type}</p>`\n            html += `<p><strong>${strings[1]}:</strong> ${question.question}</p>`\n            if (question.options && question.options.length > 0) {\n              html += `<p><strong>Options:</strong></p><ul>`\n              question.options.forEach((option, optIndex) => {\n                var isCorrect = question.correct_answer === optIndex ? ` <strong>(${strings[3]})</strong>` : \"\"\n                html += `<li>${option}${isCorrect}</li>`\n              })\n              html += `</ul>`\n            }\n            if (question.explanation) {\n              html += `<p><strong>${strings[4]}:</strong> ${question.explanation}</p>`\n            }\n            html += `</div>`\n          })\n          resolve(html)\n        })\n      }),\n\n    getInstructions: () => {\n      var instructions = \"\"\n      var instructionSelectors = [\"#id_introeditor_ifr\", \"#id_intro\", 'textarea[name=\"intro\"]']\n      for (var i = 0; i < instructionSelectors.length; i++) {\n        var $element = $(instructionSelectors[i])\n        if ($element.length > 0) {\n          if ($element.is(\"iframe\")) {\n            try {\n              var iframeDoc = $element[0].contentDocument || $element[0].contentWindow.document\n              instructions = $(\"<div>\").html(iframeDoc.body.innerHTML).text()\n            } catch (e) {\n              if (typeof tinyMCE !== \"undefined\" && tinyMCE.get(\"id_introeditor\")) {\n                instructions = tinyMCE.get(\"id_introeditor\").getContent({ format: \"text\" })\n              }\n            }\n          } else {\n            instructions = $element.val() || \"\"\n          }\n          if (instructions && instructions.trim().length > 0) break\n        }\n      }\n      return typeof instructions === \"string\" ? instructions.trim() : \"\"\n    },\n\n    getCourseModuleId: () => {\n      var urlParams = new URLSearchParams(window.location.search)\n      var cmid = urlParams.get(\"update\")\n      if (!cmid) {\n        cmid = $('input[name=\"coursemodule\"]').val() || 0\n      }\n      return Number.parseInt(cmid) || 0\n    },\n\n    loadQuestionBank: function () {\n      var cmid = this.getCourseModuleId()\n      if (cmid <= 0) return\n\n      $(\"#question-bank-loading\").show()\n\n      var promises = Ajax.call([\n        {\n          methodname: \"local_trustgrade_get_question_bank\",\n          args: { cmid: cmid },\n        },\n      ])\n\n      promises[0]\n        .done((response) => {\n          if (response.success) {\n            var questions = JSON.parse(response.questions)\n            if (questions && questions.length > 0) {\n              Str.get_string(\"question_bank_title\", \"local_trustgrade\").then((title) => {\n                var questionBankHtml = \"<h4>\" + title + \"</h4>\" + response.html\n                $(\"#question-bank-container\").html(questionBankHtml)\n                if (typeof require !== \"undefined\") {\n                  require([\"local_trustgrade/question_editor\"], (QuestionEditor) => {\n                    QuestionEditor.reinitialize(cmid)\n                  })\n                }\n              })\n            } else {\n              $(\"#question-bank-container\").html(\"\")\n            }\n          } else {\n            Notification.addNotification({ message: response.error || \"Failed to load question bank\", type: \"warning\" })\n          }\n        })\n        .fail(Notification.exception)\n        .always(() => {\n          $(\"#question-bank-loading\").hide()\n        })\n    },\n  }\n\n  return trustgrade\n})\n"],"names":["define","window","tinyMCE","M","$","Ajax","Notification","Str","ModalFactory","trustgrade","init","this","bindEvents","loadQuestionBank","document","on","e","preventDefault","checkInstructions","generateQuestions","updateSingleQuizSetting","target","val","showErrorModal","title","message","create","type","types","ALERT","body","then","modal","show","showSuccessNotification","addNotification","settingName","settingValue","cmid","getCourseModuleId","call","methodname","args","setting_name","setting_value","done","response","success","get_string","setting","replace","error","fail","exception","instructions","getInstructions","trim","length","prop","hide","recommendationHtml","recommendation","from_cache","cacheMessage","html","always","questions","JSON","parse","formatQuestionsDisplay","questionsHtml","Promise","resolve","all","strings","forEach","question","index","difficulty","points","options","option","optIndex","isCorrect","correct_answer","explanation","instructionSelectors","i","$element","is","iframeDoc","contentDocument","contentWindow","innerHTML","text","get","getContent","format","URLSearchParams","location","search","Number","parseInt","questionBankHtml","require","QuestionEditor","reinitialize"],"mappings":"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"}
