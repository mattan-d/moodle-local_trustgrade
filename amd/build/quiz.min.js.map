{"version":3,"file":"quiz.min.js","sources":["../src/quiz.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org\n\ndefine([\"jquery\", \"core/ajax\", \"core/notification\", \"core/str\", \"core/templates\"], (\n  $,\n  Ajax,\n  Notification,\n  Str,\n  Templates,\n) => {\n  var Quiz = {\n    session: null,\n    questions: [],\n    settings: {},\n    cmid: 0,\n    submissionid: 0,\n    currentQuestion: 0,\n    answers: {},\n    timer: null,\n    timeRemaining: 0,\n    attemptStarted: false,\n    attemptCompleted: false,\n    windowBlurCount: 0,\n    maxWindowBlurs: 3,\n    autoSaveInterval: null,\n\n    init: function (session) {\n      if (!session || !session.questions || session.questions.length === 0) {\n        return\n      }\n\n      this.session = session\n      this.questions = session.questions\n      this.settings = session.settings\n      this.cmid = session.cmid\n      this.submissionid = session.submissionid\n      this.currentQuestion = session.current_question\n      this.answers = session.answers\n      this.attemptStarted = session.attempt_started\n      this.attemptCompleted = session.attempt_completed\n      this.windowBlurCount = session.window_blur_count\n      this.timeRemaining = session.time_remaining\n\n      if (this.attemptCompleted) {\n        this.showResults()\n        return\n      }\n\n      if (!this.attemptStarted) {\n        this.showIntegrityWarning()\n      } else {\n        this.resumeQuiz()\n      }\n    },\n\n    resumeQuiz: function () {\n      this.bindEvents()\n      this.bindIntegrityEvents()\n      this.startAutoSave()\n      this.showQuestion(this.currentQuestion)\n      this.updateCounter()\n    },\n\n    showIntegrityWarning: function () {\n      Promise.all([\n        Str.get_string(\"important_formal_assessment\", \"local_trustgrade\"),\n        Str.get_string(\"read_carefully\", \"local_trustgrade\"),\n        Str.get_string(\"one_attempt_only\", \"local_trustgrade\"),\n        Str.get_string(\"no_going_back\", \"local_trustgrade\"),\n        Str.get_string(\"no_restarts\", \"local_trustgrade\"),\n        Str.get_string(\"time_limits\", \"local_trustgrade\"),\n        Str.get_string(\"no_cheating\", \"local_trustgrade\"),\n        Str.get_string(\"final_grade\", \"local_trustgrade\"),\n        Str.get_string(\"stay_focused\", \"local_trustgrade\"),\n        Str.get_string(\"cannot_restart_notice\", \"local_trustgrade\"),\n        Str.get_string(\"understand_start_quiz\", \"local_trustgrade\"),\n      ]).then((strings) => {\n        var templateContext = {\n          title: strings[0],\n          subtitle: strings[1],\n          rules: [\n            strings[2], // one_attempt_only\n            strings[3], // no_going_back\n            strings[4], // no_restarts\n            strings[5], // time_limits\n            strings[6], // no_cheating\n            strings[7], // final_grade\n            strings[8], // stay_focused\n          ],\n          notice: strings[9],\n          button_text: strings[10],\n        }\n\n        Templates.render(\"local_trustgrade/quiz_integrity_warning\", templateContext)\n          .then((html) => {\n            $(\".quiz-content\").html(html)\n            $(\".question-counter\").hide()\n            $(\".quiz-navigation\").hide()\n            this.bindStartEvent()\n          })\n          .catch(Notification.exception)\n      })\n    },\n\n    bindStartEvent: function () {\n      $(document)\n        .off(\"click.quizstart\")\n        .on(\"click.quizstart\", \"#start-quiz-btn\", () => {\n          this.startQuizAttempt()\n        })\n    },\n\n    startQuizAttempt: function () {\n      var promise = Ajax.call([\n        {\n          methodname: \"local_trustgrade_start_quiz_attempt\",\n          args: {\n            cmid: this.cmid,\n            submissionid: this.submissionid,\n          },\n        },\n      ])[0]\n\n      promise\n        .done((response) => {\n          if (response.success) {\n            this.attemptStarted = true\n            Str.get_string(\"quiz_started_notice\", \"local_trustgrade\").then((message) => {\n              Notification.addNotification({ message: message, type: \"info\" })\n            })\n            this.resumeQuiz()\n          } else {\n            Str.get_string(\"failed_start_session\", \"local_trustgrade\").then((message) => {\n              Notification.addNotification({ message: response.error || message, type: \"error\" })\n            })\n          }\n        })\n        .fail(Notification.exception)\n    },\n\n    startAutoSave: function () {\n      this.autoSaveInterval = setInterval(() => {\n        this.saveSessionState()\n      }, 2000)\n    },\n\n    saveSessionState: function () {\n      if (!this.attemptStarted || this.attemptCompleted) {\n        return\n      }\n\n      var updates = {\n        current_question: this.currentQuestion,\n        answers: this.answers,\n        time_remaining: this.timeRemaining,\n        window_blur_count: this.windowBlurCount,\n      }\n\n      Ajax.call([\n        {\n          methodname: \"local_trustgrade_update_quiz_session\",\n          args: {\n            cmid: this.cmid,\n            submissionid: this.submissionid,\n            updates: JSON.stringify(updates),\n          },\n        },\n      ])\n    },\n\n    bindEvents: function () {\n      $(document).off(\"click.quiz\")\n      $(document).on(\"click.quiz\", \"#next-btn\", () => {\n        if (this.validateCurrentAnswer()) {\n          this.saveCurrentAnswer()\n          this.advanceToNextQuestion()\n        }\n      })\n      $(document).on(\"click.quiz\", \"#finish-btn\", () => {\n        if (this.validateCurrentAnswer()) {\n          this.saveCurrentAnswer()\n          this.finishQuiz()\n        }\n      })\n      $(document).on(\"change.quiz\", 'input[name=\"answer\"]', () => {\n        this.updateNavigationButtons()\n        this.saveSessionState()\n      })\n      $(document).on(\"input.quiz\", 'textarea[name=\"answer\"]', () => {\n        this.updateNavigationButtons()\n        this.saveSessionState()\n      })\n    },\n\n    bindIntegrityEvents: function () {\n      $(window).on(\"blur.quiz\", () => {\n        if (this.attemptStarted && !this.attemptCompleted) {\n          this.windowBlurCount++\n          this.logIntegrityViolation(\"window_blur\", { count: this.windowBlurCount })\n          if (this.windowBlurCount >= this.maxWindowBlurs) {\n            this.showIntegrityViolation()\n          } else {\n            Str.get_string(\"window_switching_warning\", \"local_trustgrade\", {\n              count: this.windowBlurCount,\n              max: this.maxWindowBlurs,\n            }).then((message) => {\n              Notification.addNotification({ message: message, type: \"warning\" })\n            })\n          }\n        }\n      })\n      $(document).on(\"contextmenu.quiz\", () => {\n        if (this.attemptStarted && !this.attemptCompleted) {\n          this.logIntegrityViolation(\"right_click_attempt\")\n          return false\n        }\n      })\n      $(document).on(\"keydown.quiz\", (e) => {\n        if (this.attemptStarted && !this.attemptCompleted) {\n          if (\n            e.keyCode === 123 ||\n            (e.ctrlKey && e.shiftKey && (e.keyCode === 73 || e.keyCode === 74)) ||\n            (e.ctrlKey && e.keyCode === 85)\n          ) {\n            e.preventDefault()\n            this.logIntegrityViolation(\"dev_tools_attempt\")\n            Str.get_string(\"dev_tools_blocked\", \"local_trustgrade\").then((message) => {\n              Notification.addNotification({ message: message, type: \"error\" })\n            })\n            return false\n          }\n        }\n      })\n      $(window).on(\"beforeunload.quiz\", () => {\n        if (this.attemptStarted && !this.attemptCompleted) {\n          return Str.get_string(\"quiz_progress_saved\", \"local_trustgrade\").then((message) => message)\n        }\n      })\n    },\n\n    logIntegrityViolation: function (violationType, violationData = {}) {\n      Ajax.call([\n        {\n          methodname: \"local_trustgrade_log_integrity_violation\",\n          args: {\n            cmid: this.cmid,\n            submissionid: this.submissionid,\n            violation_type: violationType,\n            violation_data: JSON.stringify(violationData),\n          },\n        },\n      ])\n    },\n\n    getQuestionText: (q) => {\n      if (!q) return \"\"\n      return q.text || q.question || \"\"\n    },\n\n    getOptionText: (option) => {\n      if (option == null) return \"\"\n      if (typeof option === \"string\") return option\n      if (typeof option === \"object\") {\n        return option.text ?? option.label ?? String(option)\n      }\n      return String(option)\n    },\n\n    getOptionExplanation: (question, index) => {\n      if (!question) return \"\"\n      const options = question.options || []\n      const i = typeof index === \"number\" ? index : Number.parseInt(index, 10)\n      if (Number.isNaN(i) || i == null) return \"\"\n\n      // New pattern: explanation on the option object\n      if (Array.isArray(options) && options[i] && typeof options[i] === \"object\" && \"explanation\" in options[i]) {\n        return options[i].explanation || \"\"\n      }\n\n      // Alternate pattern: explanations array aligning to options index\n      if (Array.isArray(question.explanations)) {\n        return question.explanations[i] || \"\"\n      }\n\n      // Alternate pattern: map object, e.g., { \"true\": \"...\", \"false\": \"...\" }\n      if (question.explanations && typeof question.explanations === \"object\") {\n        // Try boolean-like keys, then index keys\n        const key = i === 1 ? \"true\" : i === 0 ? \"false\" : String(i)\n        return question.explanations[key] || question.explanations[String(i)] || \"\"\n      }\n\n      // Fallback\n      if (question.option_explanations && Array.isArray(question.option_explanations)) {\n        return question.option_explanations[i] || \"\"\n      }\n\n      return \"\"\n    },\n\n    getCorrectAnswerIndex: (question) => {\n      if (!question) return null\n\n      // Backward-compatible: numeric index\n      if (Number.isInteger(question.correct_answer)) {\n        return question.correct_answer\n      }\n\n      // New pattern: detect correct option by flag\n      const options = question.options || []\n      for (let i = 0; i < options.length; i++) {\n        const opt = options[i]\n        if (\n          opt &&\n          typeof opt === \"object\" &&\n          (opt.correct === true || opt.is_correct === true || opt.isCorrect === true)\n        ) {\n          return i\n        }\n      }\n      return null\n    },\n\n    isAnswerCorrect: function (question, userAnswer) {\n      if (!question) return false\n\n      if (question.type === \"true_false\") {\n        // Backward-compat: boolean compare\n        if (typeof question.correct_answer !== \"boolean\") return false\n        let userBool = null\n        if (userAnswer === true || userAnswer === \"true\" || userAnswer === 1 || userAnswer === \"1\") userBool = true\n        else if (userAnswer === false || userAnswer === \"false\" || userAnswer === 0 || userAnswer === \"0\")\n          userBool = false\n        return userBool !== null && userBool === question.correct_answer\n      }\n\n      const correctIndex = this.getCorrectAnswerIndex(question)\n      if (correctIndex == null) return false\n      const userIndex = typeof userAnswer === \"number\" ? userAnswer : Number.parseInt(userAnswer, 10)\n      return userIndex === correctIndex\n    },\n\n    advanceToNextQuestion: function () {\n      if (this.currentQuestion < this.questions.length - 1) {\n        this.currentQuestion++\n        this.showQuestion(this.currentQuestion)\n        this.updateCounter()\n        this.saveSessionState()\n      }\n    },\n\n    showQuestion: function (index) {\n      var question = this.questions[index]\n      Promise.all([\n        Str.get_string(\n          \"quiz_progress_complete\",\n          \"local_trustgrade\",\n          Math.round(((index + 1) / this.questions.length) * 100),\n        ),\n        Str.get_string(\"question_x_of_y\", \"local_trustgrade\", { current: index + 1, total: this.questions.length }),\n        Str.get_string(\"instructor_question\", \"local_trustgrade\"),\n        Str.get_string(\"based_on_submission\", \"local_trustgrade\"),\n        Str.get_string(\"progress_auto_saved\", \"local_trustgrade\"),\n        Str.get_string(\"true\", \"local_trustgrade\"),\n        Str.get_string(\"false\", \"local_trustgrade\"),\n        Str.get_string(\"enter_answer_placeholder\", \"local_trustgrade\"),\n      ]).then((strings) => {\n        var progress = Math.round(((index + 1) / this.questions.length) * 100)\n        var html = `<div class=\"quiz-progress mb-3\">\n          <div class=\"progress\">\n            <div class=\"progress-bar bg-primary\" style=\"width: ${progress}%\"></div>\n          </div>\n          <small class=\"text-muted\">${strings[1]} (${strings[0]})</small>\n        </div>\n        <div class=\"question-container\">\n          <div class=\"question-header d-flex justify-content-between align-items-center\">\n                        <span class=\"question-number me-3\"><strong>${strings[1]}</strong></span>\n            <div class=\"d-flex align-items-center\">\n          \n              <span class=\"question-source badge ${question.source === \"instructor\" ? \"badge-primary\" : \"badge-success\"}\">\n                ${question.source === \"instructor\" ? strings[2] : strings[3]}\n              </span>\n            </div>\n            <div class=\"question-timer-container\"></div>\n          </div>\n          <div class=\"alert alert-info\">\n            <i class=\"fa fa-info-circle\"></i> \n            <small>${strings[4]}</small>\n          </div>\n          <h3 class=\"question-text\">${this.getQuestionText(question)}</h3>`\n\n        if (question.type === \"multiple_choice\" && question.options) {\n          html += `<div class=\"question-options\">`\n          question.options.forEach((option, optIndex) => {\n            var checked = this.answers[index] === optIndex ? \"checked\" : \"\"\n            var label = this.getOptionText(option)\n            html += `<div class=\"form-check\">\n              <input class=\"form-check-input\" type=\"radio\" name=\"answer\" value=\"${optIndex}\" id=\"option_${optIndex}\" ${checked}>\n              <label class=\"form-check-label\" for=\"option_${optIndex}\">${label}</label>\n            </div>`\n          })\n          html += `</div>`\n        } else if (question.type === \"true_false\") {\n          var trueChecked = this.answers[index] === true ? \"checked\" : \"\"\n          var falseChecked = this.answers[index] === false ? \"checked\" : \"\"\n          html += `<div class=\"question-options\">\n            <div class=\"form-check\">\n              <input class=\"form-check-input\" type=\"radio\" name=\"answer\" value=\"true\" id=\"true_option\" ${trueChecked}>\n              <label class=\"form-check-label\" for=\"true_option\">${strings[5]}</label>\n            </div>\n            <div class=\"form-check\">\n              <input class=\"form-check-input\" type=\"radio\" name=\"answer\" value=\"false\" id=\"false_option\" ${falseChecked}>\n              <label class=\"form-check-label\" for=\"false_option\">${strings[6]}</label>\n            </div>\n          </div>`\n        } else if (question.type === \"short_answer\") {\n          var savedAnswer = this.answers[index] || \"\"\n          html += `<div class=\"question-options\">\n            <textarea class=\"form-control\" name=\"answer\" rows=\"4\" placeholder=\"${strings[7]}\">${savedAnswer}</textarea>\n          </div>`\n        }\n        html += `</div>`\n        $(\".quiz-content\").html(html)\n        $(\".question-counter\").show()\n        $(\".quiz-navigation\").show()\n        this.updateNavigationButtons()\n        if (this.settings.show_countdown) {\n          this.startTimer()\n        }\n      })\n    },\n\n    startTimer: function () {\n      if (!this.settings.show_countdown) return\n      if (this.timer) clearInterval(this.timer)\n      if (this.timeRemaining <= 0 || this.timeRemaining > this.settings.time_per_question) {\n        this.timeRemaining = this.settings.time_per_question\n      }\n      this.updateTimerDisplay()\n      $(\".question-timer-container\").show()\n      this.timer = setInterval(() => {\n        this.timeRemaining--\n        this.updateTimerDisplay()\n        if (this.timeRemaining <= 0) {\n          this.stopTimer()\n          this.autoAdvance()\n        }\n      }, 1000)\n    },\n\n    stopTimer: function () {\n      if (this.timer) {\n        clearInterval(this.timer)\n        this.timer = null\n      }\n      $(\".question-timer-container\").hide()\n    },\n\n    updateTimerDisplay: function () {\n      var minutes = Math.floor(this.timeRemaining / 60)\n      var seconds = this.timeRemaining % 60\n      var timeString = minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds\n      Str.get_string(\"time_remaining\", \"local_trustgrade\", timeString).then((message) => {\n        var timerClass = this.timeRemaining <= 5 ? \"timer-warning\" : \"\"\n        var timerHtml = `<div class=\"timer-display ${timerClass}\">\n                          <i class=\"fa fa-clock-o\"></i> ${message}\n                        </div>`\n        $(\".question-timer-container\").html(timerHtml)\n      })\n    },\n\n    autoAdvance: function () {\n      this.saveCurrentAnswer()\n      if (this.currentQuestion < this.questions.length - 1) {\n        this.advanceToNextQuestion()\n      } else {\n        this.finishQuiz()\n      }\n    },\n\n    updateCounter: function () {\n      var total = this.questions.length\n      var current = this.currentQuestion + 1\n      Str.get_string(\"question_x_of_y\", \"local_trustgrade\", { current: current, total: total }).then((message) => {\n        $(\".question-counter\").html(message)\n      })\n    },\n\n    updateNavigationButtons: function () {\n      $(\"#prev-btn\").hide()\n      Promise.all([\n        Str.get_string(\"next_question\", \"local_trustgrade\"),\n        Str.get_string(\"submit_final_answers\", \"local_trustgrade\"),\n      ]).then((strings) => {\n        if (this.currentQuestion < this.questions.length - 1) {\n          $(\"#next-btn\").show().text(strings[0])\n          $(\"#finish-btn\").hide()\n        } else {\n          $(\"#next-btn\").hide()\n          $(\"#finish-btn\").show().text(strings[1])\n        }\n      })\n    },\n\n    validateCurrentAnswer: function () {\n      var question = this.questions[this.currentQuestion]\n      var hasAnswer = false\n      if (question.type === \"multiple_choice\" || question.type === \"true_false\") {\n        hasAnswer = $('input[name=\"answer\"]:checked').length > 0\n      } else if (question.type === \"short_answer\") {\n        hasAnswer = $('textarea[name=\"answer\"]').val().trim().length > 0\n      }\n      if (!hasAnswer) {\n        Str.get_string(\"provide_answer_warning\", \"local_trustgrade\").then((message) => {\n          Notification.addNotification({ message: message, type: \"warning\" })\n        })\n        return false\n      }\n      return true\n    },\n\n    saveCurrentAnswer: function () {\n      var question = this.questions[this.currentQuestion]\n      var answer = null\n      if (question.type === \"multiple_choice\") {\n        answer = $('input[name=\"answer\"]:checked').val()\n        if (answer !== undefined) this.answers[this.currentQuestion] = Number.parseInt(answer)\n      } else if (question.type === \"true_false\") {\n        answer = $('input[name=\"answer\"]:checked').val()\n        if (answer !== undefined) this.answers[this.currentQuestion] = answer === \"true\"\n      } else if (question.type === \"short_answer\") {\n        answer = $('textarea[name=\"answer\"]').val().trim()\n        this.answers[this.currentQuestion] = answer\n      }\n      this.timeRemaining = this.settings.time_per_question\n    },\n\n    finishQuiz: function () {\n      if (this.attemptCompleted) return\n      this.attemptCompleted = true\n      this.stopTimer()\n      if (this.autoSaveInterval) clearInterval(this.autoSaveInterval)\n      $(window).off(\".quiz\")\n      $(document).off(\".quiz\")\n      var score = this.calculateScore()\n      var promise = Ajax.call([\n        {\n          methodname: \"local_trustgrade_complete_quiz_session\",\n          args: {\n            cmid: this.cmid,\n            submissionid: this.submissionid,\n            final_answers: JSON.stringify(this.answers),\n            final_score: score,\n          },\n        },\n      ])[0]\n\n      promise\n        .done((response) => {\n          if (!response.success) {\n            Str.get_string(\"failed_save_results\", \"local_trustgrade\", response.error || \"Unknown error\").then(\n              (message) => {\n                Notification.addNotification({ message: message, type: \"error\" })\n              },\n            )\n          }\n          this.showResults()\n        })\n        .fail(() => {\n          Str.get_string(\"failed_save_contact_instructor\", \"local_trustgrade\").then((message) => {\n            Notification.addNotification({ message: message, type: \"error\" })\n          })\n          this.showResults()\n        })\n    },\n\n    calculateScore: function () {\n      var score = 0\n      this.questions.forEach((question, index) => {\n        var userAnswer = this.answers[index]\n        var isCorrect = this.isAnswerCorrect(question, userAnswer)\n        var points = question.points || 10\n        if (isCorrect) score += points\n      })\n      return score\n    },\n\n    showResults: function () {\n      var score = 0\n      var totalPoints = 0\n      Promise.all([\n        Str.get_string(\"quiz_completed_header\", \"local_trustgrade\"),\n        Str.get_string(\"quiz_completed_message\", \"local_trustgrade\"),\n        Str.get_string(\"correct\", \"local_trustgrade\"),\n        Str.get_string(\"incorrect\", \"local_trustgrade\"),\n        Str.get_string(\"your_answer\", \"local_trustgrade\"),\n        Str.get_string(\"correct_answer_was\", \"local_trustgrade\"),\n        Str.get_string(\"no_answer\", \"local_trustgrade\"),\n        Str.get_string(\"explanation\", \"local_trustgrade\"),\n        Str.get_string(\"final_grade_notice\", \"local_trustgrade\"),\n        Str.get_string(\"true\", \"local_trustgrade\"),\n        Str.get_string(\"false\", \"local_trustgrade\"),\n      ]).then((strings) => {\n        var resultsHtml = `<div class=\"quiz-completion-header alert alert-success\">\n          <h2><i class=\"fa fa-check-circle\"></i> ${strings[0]}</h2>\n          <p>${strings[1]}</p>\n        </div>\n        <div class=\"results-summary\">`\n\n        this.questions.forEach((question, index) => {\n          var userAnswer = this.answers[index]\n          var isCorrect = this.isAnswerCorrect(question, userAnswer)\n          var points = question.points || 10\n          totalPoints += points\n          if (isCorrect) score += points\n\n          resultsHtml += `<div class=\"result-item ${isCorrect ? \"correct\" : \"incorrect\"}\">\n            <div class=\"result-header\">\n              <span class=\"question-number\">Question ${index + 1}</span>\n              <span class=\"result-status ${isCorrect ? \"text-success\" : \"text-danger\"}\">\n                ${isCorrect ? `✓ ${strings[2]}` : `✗ ${strings[3]}`}\n              </span>\n            </div>\n            <p class=\"question-text\">${this.getQuestionText(question)}</p>`\n\n          // Show the user's answer text\n          if (question.type === \"multiple_choice\") {\n            var mcAnswerText = strings[6]\n            if (\n              userAnswer !== undefined &&\n              userAnswer !== null &&\n              question.options &&\n              question.options[Number(userAnswer)] !== undefined\n            ) {\n              mcAnswerText = this.getOptionText(question.options[Number(userAnswer)])\n            }\n            resultsHtml += `<p><strong>${strings[4].replace(\"{$a}\", mcAnswerText)}</strong></p>`\n\n            // Show the explanation corresponding to the selected answer (per-answer explanation)\n            var explanationText = this.getOptionExplanation(question, Number(userAnswer))\n            if (explanationText) {\n              resultsHtml += `<div class=\"explanation\"><strong>${strings[7]}:</strong> ${explanationText}</div>`\n            }\n          } else if (question.type === \"true_false\") {\n            var tfAnswerText = userAnswer !== undefined ? (userAnswer ? strings[9] : strings[10]) : strings[6]\n            resultsHtml += `<p><strong>${strings[4].replace(\"{$a}\", tfAnswerText)}</strong></p>`\n\n            // Attempt to show a per-answer explanation if provided in a map or options\n            var tfExplanation = \"\"\n            if (question.explanations && typeof question.explanations === \"object\") {\n              if (userAnswer === true || userAnswer === \"true\" || userAnswer === 1 || userAnswer === \"1\") {\n                tfExplanation =\n                  question.explanations.true || question.explanations[\"1\"] || question.explanations[1] || \"\"\n              } else if (userAnswer === false || userAnswer === \"false\" || userAnswer === 0 || userAnswer === \"0\") {\n                tfExplanation =\n                  question.explanations.false || question.explanations[\"0\"] || question.explanations[0] || \"\"\n              }\n            } else if (Array.isArray(question.options) && question.options.length === 2) {\n              // If options are objects, try to read explanation\n              var idx = userAnswer === true || userAnswer === \"true\" || userAnswer === 1 || userAnswer === \"1\" ? 1 : 0\n              if (\n                question.options[idx] &&\n                typeof question.options[idx] === \"object\" &&\n                \"explanation\" in question.options[idx]\n              ) {\n                tfExplanation = question.options[idx].explanation || \"\"\n              }\n            }\n            if (tfExplanation) {\n              resultsHtml += `<div class=\"explanation\"><strong>${strings[7]}:</strong> ${tfExplanation}</div>`\n            }\n          } else if (question.type === \"short_answer\") {\n            resultsHtml += `<p><strong>${strings[4].replace(\"{$a}\", userAnswer || strings[6])}</strong></p>`\n            // No per-answer explanation for short answer in the new pattern\n          }\n\n          // IMPORTANT CHANGE: Do NOT show the \"Correct answer was\" line.\n\n          resultsHtml += `</div>`\n        })\n\n        var percentage = totalPoints > 0 ? Math.round((score / totalPoints) * 100) : 0\n        Str.get_string(\"final_score\", \"local_trustgrade\", {\n          score: score,\n          total: totalPoints,\n          percentage: percentage,\n        }).then((scoreString) => {\n          resultsHtml =\n            `<div class=\"score-summary alert alert-info\">\n              <h3>${scoreString}</h3>\n              <p><strong>${strings[8]}</strong></p>\n            </div>` + resultsHtml\n          resultsHtml += `</div>`\n          if (this.windowBlurCount > 0) {\n            Promise.all([\n              Str.get_string(\"integrity_report_header\", \"local_trustgrade\"),\n              Str.get_string(\"window_focus_lost\", \"local_trustgrade\", this.windowBlurCount),\n              Str.get_string(\"integrity_recorded\", \"local_trustgrade\"),\n            ]).then((integrityStrings) => {\n              resultsHtml += `<div class=\"integrity-report alert alert-warning\">\n                <h4><i class=\"fa fa-exclamation-triangle\"></i> ${integrityStrings[0]}</h4>\n                <p>${integrityStrings[1]}</p>\n                <p><small>${integrityStrings[2]}</small></p>\n              </div>`\n              this.displayResults(resultsHtml)\n            })\n          } else {\n            this.displayResults(resultsHtml)\n          }\n        })\n      })\n    },\n\n    displayResults: (resultsHtml) => {\n      $(\".quiz-content\").hide()\n      $(\".quiz-navigation\").hide()\n      $(\".question-counter\").hide()\n      $(\".question-timer-container\").hide()\n      $(\".quiz-results\").html(resultsHtml).show()\n    },\n\n    showIntegrityViolation: function () {\n      this.saveSessionState()\n\n      this.attemptCompleted = true\n      this.stopTimer()\n      if (this.autoSaveInterval) clearInterval(this.autoSaveInterval)\n\n      var completionUpdates = {\n        current_question: this.currentQuestion,\n        answers: this.answers,\n        time_remaining: this.timeRemaining,\n        window_blur_count: this.windowBlurCount,\n        attempt_completed: true,\n      }\n\n      Ajax.call([\n        {\n          methodname: \"local_trustgrade_update_quiz_session\",\n          args: {\n            cmid: this.cmid,\n            submissionid: this.submissionid,\n            updates: JSON.stringify(completionUpdates),\n          },\n        },\n      ])\n\n      Promise.all([\n        Str.get_string(\"integrity_violation_header\", \"local_trustgrade\"),\n        Str.get_string(\"quiz_flagged\", \"local_trustgrade\"),\n        Str.get_string(\"exceeded_window_switches\", \"local_trustgrade\", this.maxWindowBlurs),\n        Str.get_string(\"incident_logged\", \"local_trustgrade\"),\n        Str.get_string(\"progress_saved_cannot_continue\", \"local_trustgrade\"),\n      ]).then((strings) => {\n        var templateContext = {\n          title: strings[0],\n          flagged_message: strings[1],\n          exceeded_message: strings[2],\n          logged_message: strings[3],\n          progress_message: strings[4],\n        }\n\n        Templates.render(\"local_trustgrade/quiz_integrity_violation\", templateContext)\n          .then((html) => {\n            $(\".quiz-content\").html(html)\n            $(\".quiz-navigation\").hide()\n            $(\".question-counter\").hide()\n            $(\".question-timer-container\").hide()\n            this.logIntegrityViolation(\"integrity_violation\", {\n              violation_type: \"excessive_window_blur\",\n              window_blur_count: this.windowBlurCount,\n              current_question: this.currentQuestion,\n            })\n          })\n          .catch(Notification.exception)\n      })\n    },\n  }\n\n  return Quiz\n})\n"],"names":["define","$","Ajax","Notification","Str","Templates","session","questions","settings","cmid","submissionid","currentQuestion","answers","timer","timeRemaining","attemptStarted","attemptCompleted","windowBlurCount","maxWindowBlurs","autoSaveInterval","init","length","this","current_question","attempt_started","attempt_completed","window_blur_count","time_remaining","showResults","resumeQuiz","showIntegrityWarning","bindEvents","bindIntegrityEvents","startAutoSave","showQuestion","updateCounter","Promise","all","get_string","then","strings","templateContext","title","subtitle","rules","notice","button_text","render","html","hide","bindStartEvent","catch","exception","document","off","on","startQuizAttempt","call","methodname","args","done","response","success","message","addNotification","type","error","fail","setInterval","saveSessionState","updates","JSON","stringify","validateCurrentAnswer","saveCurrentAnswer","advanceToNextQuestion","finishQuiz","updateNavigationButtons","window","logIntegrityViolation","count","showIntegrityViolation","max","e","keyCode","ctrlKey","shiftKey","preventDefault","violationType","violationData","arguments","undefined","violation_type","violation_data","getQuestionText","q","text","question","getOptionText","option","label","String","getOptionExplanation","index","options","i","Number","parseInt","isNaN","Array","isArray","explanation","explanations","key","option_explanations","getCorrectAnswerIndex","isInteger","correct_answer","opt","correct","is_correct","isCorrect","isAnswerCorrect","userAnswer","userBool","correctIndex","Math","round","current","total","source","forEach","optIndex","checked","trueChecked","falseChecked","savedAnswer","show","show_countdown","startTimer","clearInterval","time_per_question","updateTimerDisplay","stopTimer","autoAdvance","minutes","floor","seconds","timeString","timerHtml","hasAnswer","val","trim","answer","score","calculateScore","final_answers","final_score","points","totalPoints","resultsHtml","mcAnswerText","replace","explanationText","tfAnswerText","tfExplanation","true","false","idx","percentage","scoreString","integrityStrings","displayResults","completionUpdates","flagged_message","exceeded_message","logged_message","progress_message"],"mappings":"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"}