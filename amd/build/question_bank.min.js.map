{"version":3,"file":"question_bank.min.js","sources":["../src/question_bank.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n\nvar define = window.define\nvar M = window.M\n\ndefine([\"jquery\", \"core/str\", \"core/ajax\", \"core/notification\"], ($, Str, Ajax, Notification) => {\n  var QuestionBank = {\n    init: function (cmid) {\n      this.cmid = cmid || 0\n      this.bindEvents()\n    },\n\n    bindEvents: function () {\n      // Generate new questions button\n      $(\"#generate-new-questions\").on(\"click\", () => {\n        this.generateQuestions()\n      })\n    },\n\n    generateQuestions: function () {\n      var questionsCount = $(\"#questions-count\").val()\n\n      $(\"#generate-new-questions\").prop(\"disabled\", true)\n      $(\"#generation-loading\").show()\n\n      var promises = Ajax.call([\n        {\n          methodname: \"local_trustgrade_generate_questions\",\n          args: {\n            cmid: this.cmid,\n            count: Number.parseInt(questionsCount),\n          },\n        },\n      ])\n\n      promises[0]\n        .then((response) => {\n          $(\"#generation-loading\").hide()\n          $(\"#generate-new-questions\").prop(\"disabled\", false)\n\n          if (response.success) {\n            Notification.addNotification({\n              message: questionsCount + \" \" + M.util.get_string(\"questions_generated_successfully\", \"local_trustgrade\"),\n              type: \"success\",\n            })\n            // Reload the page to show new questions\n            window.location.reload()\n          } else {\n            Notification.addNotification({\n              message: response.error || M.util.get_string(\"error_generating_questions\", \"local_trustgrade\"),\n              type: \"error\",\n            })\n          }\n        })\n        .catch((error) => {\n          $(\"#generation-loading\").hide()\n          $(\"#generate-new-questions\").prop(\"disabled\", false)\n\n          Notification.addNotification({\n            message: M.util.get_string(\"error_generating_questions\", \"local_trustgrade\"),\n            type: \"error\",\n          })\n        })\n    },\n  }\n\n  return QuestionBank\n})\n"],"names":["define","window","M","$","Str","Ajax","Notification","init","cmid","this","bindEvents","on","generateQuestions","questionsCount","val","prop","show","call","methodname","args","count","Number","parseInt","then","response","hide","success","addNotification","message","util","get_string","type","location","reload","error","catch"],"mappings":"AAEA,IAAIA,OAASC,OAAOD,OAChBE,EAAID,OAAOC,EAEfF,wCAAO,CAAC,SAAU,WAAY,YAAa,qBAAsB,CAACG,EAAGC,IAAKC,KAAMC,gBAC3D,CACjBC,KAAM,SAAUC,MACdC,KAAKD,KAAOA,MAAQ,EACpBC,KAAKC,YACN,EAEDA,WAAY,WAEVP,EAAE,2BAA2BQ,GAAG,QAAS,KACvCF,KAAKG,qBAER,EAEDA,kBAAmB,WACjB,IAAIC,eAAiBV,EAAE,oBAAoBW,MAE3CX,EAAE,2BAA2BY,KAAK,YAAY,GAC9CZ,EAAE,uBAAuBa,OAEVX,KAAKY,KAAK,CACvB,CACEC,WAAY,sCACZC,KAAM,CACJX,KAAMC,KAAKD,KACXY,MAAOC,OAAOC,SAAST,oBAKpB,GACNU,KAAMC,WACLrB,EAAE,uBAAuBsB,OACzBtB,EAAE,2BAA2BY,KAAK,YAAY,GAE1CS,SAASE,SACXpB,aAAaqB,gBAAgB,CAC3BC,QAASf,eAAiB,IAAMX,EAAE2B,KAAKC,WAAW,mCAAoC,oBACtFC,KAAM,YAGR9B,OAAO+B,SAASC,UAEhB3B,aAAaqB,gBAAgB,CAC3BC,QAASJ,SAASU,OAAShC,EAAE2B,KAAKC,WAAW,6BAA8B,oBAC3EC,KAAM,YAIXI,MAAOD,QACN/B,EAAE,uBAAuBsB,OACzBtB,EAAE,2BAA2BY,KAAK,YAAY,GAE9CT,aAAaqB,gBAAgB,CAC3BC,QAAS1B,EAAE2B,KAAKC,WAAW,6BAA8B,oBACzDC,KAAM,WAGd"}
